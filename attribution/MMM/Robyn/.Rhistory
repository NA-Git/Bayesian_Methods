pkgs <- c("RCurl","jsonlite")
for (pkg in pkgs) {
if (! (pkg %in% rownames(installed.packages()))) { install.packages(pkg) }
}
install.packages("h2o", type="source", repos="https://h2o-release.s3.amazonaws.com/h2o/rel-zygmund/4/R")
install.packages("reticulate") # Install reticulate first if you haven't already
remotes::install_github("facebookexperimental/Robyn/R")
library(Robyn)
library(npreg)
library(dplyr)
library(nloptr)
library(lares)
library(tidyr)
library(stringr)
library(reticulate)
library(h2o)
h2o.init()
conda_create("r-reticulate")
conda_install("r-reticulate", "nevergrad", pip = TRUE)
use_condaenv("r-reticulate")
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv(''robyn_final'hain_robyn.csv', fileEncoding = 'UTF-8-BOM')
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv('hain_robyn.csv', fileEncoding = 'UTF-8-BOM')
data("dt_prophet_holidays")
head(dt_prophet_holidays)
``` r
InputCollect <- robyn_inputs(
dt_input = df,
dt_holidays = dt_prophet_holidays,
date_var = "DATE", # date format must be "2020-01-01, and must be in all caps"
dep_var = "revenue", # there should be only one dependent variable
dep_var_type = "revenue", # "revenue" (ROI) or "conversion" (CPA)
prophet_vars = c("trend", "season", "holiday"), # "trend","season", "weekday" & "holiday"
prophet_country = "US", # input one country. dt_prophet_holidays includes 59 countries by default
context_vars = c("cargill", 'inflation'), # e.g. competitors, discount, unemployment etc
paid_media_spends = c("banner_S", "blog_S", "coupon_S", "email_S"), # mandatory input
paid_media_vars = c("banner_I", "blog_I", "coupon_I", "email_I"), # mandatory.
# paid_media_vars must have same order as paid_media_spends. Use media exposure metrics like
# impressions, GRP etc. If not applicable, use spend instead.
# organic_vars = "newsletter", # marketing activity without media spend
# factor_vars = c("events"), # force variables in context_vars or organic_vars to be categorical
window_start = "2019-10-14",
window_end = "2021-4-26",
adstock = "weibull_pdf" # geometric, weibull_cdf or weibull_pdf.
)
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv('df_knn_imputed_mean.csv', fileEncoding = 'UTF-8-BOM')
data("dt_prophet_holidays")
head(dt_prophet_holidays)
``` r
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv('df_knn_imputed_mean.csv', fileEncoding = 'UTF-8-BOM')
data("dt_prophet_holidays")
head(dt_prophet_holidays)
``` r
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv('df_knn_imputed_mean.csv', fileEncoding = 'UTF-8-BOM')
data("dt_prophet_holidays")
head(dt_prophet_holidays)
``` r
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv('df_knn_imputed_mean.csv', fileEncoding = 'UTF-8-BOM')
data("dt_prophet_holidays")
head(dt_prophet_holidays)
``` r
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv('df_knn_imputed_mean.csv', fileEncoding = 'UTF-8-BOM')
data("dt_prophet_holidays")
head(dt_prophet_holidays)
``` r
``` r
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv('df_knn_imputed.csv', fileEncoding = 'UTF-8-BOM')
data("dt_prophet_holidays")
head(dt_prophet_holidays)
``` r
``` r
``` r
``` r
``` r
robyn_object <- "C:/Users/norri/Desktop/My_Robyn.RDS"
``` r
InputCollect <- robyn_inputs(
dt_input = df,
dt_holidays = dt_prophet_holidays,
date_var = "DATE", # date format must be "2020-01-01, and must be in all caps"
dep_var = "revenue", # there should be only one dependent variable
dep_var_type = "revenue", # "revenue" (ROI) or "conversion" (CPA)
prophet_vars = c("trend", "season", "holiday"), # "trend","season", "weekday" & "holiday"
prophet_country = "US", # input one country. dt_prophet_holidays includes 59 countries by default
context_vars = c("cargill", 'inflation'), # e.g. competitors, discount, unemployment etc
paid_media_spends = c("banner_S", "blog_S", "coupon_S", "email_S"), # mandatory input
paid_media_vars = c("banner_I", "blog_I", "coupon_I", "email_I"), # mandatory.
# paid_media_vars must have same order as paid_media_spends. Use media exposure metrics like
# impressions, GRP etc. If not applicable, use spend instead.
# organic_vars = "newsletter", # marketing activity without media spend
# factor_vars = c("events"), # force variables in context_vars or organic_vars to be categorical
window_start = "2019-10-14",
window_end = "2021-4-26",
adstock = "weibull_pdf" # geometric, weibull_cdf or weibull_pdf.
)
``` r
InputCollect <- robyn_inputs(
dt_input = df,
dt_holidays = dt_prophet_holidays,
date_var = "DATE", # date format must be "2020-01-01, and must be in all caps"
dep_var = "revenue", # there should be only one dependent variable
dep_var_type = "conversion", # "revenue" (ROI) or "conversion" (CPA)
prophet_vars = c("trend", "season", "holiday"), # "trend","season", "weekday" & "holiday"
prophet_country = "US", # input one country. dt_prophet_holidays includes 59 countries by default
# context_vars = c("cargill", 'inflation'), # e.g. competitors, discount, unemployment etc
paid_media_spends = c("LCM_Cost", "Paid_Search_Cost", "Dig_Coup_Cost"), # mandatory input
paid_media_vars = c("LCM_Imp", "Paid_Search_Imp", "Dig_Coupon_Imp"), # mandatory.
# paid_media_vars must have same order as paid_media_spends. Use media exposure metrics like
# impressions, GRP etc. If not applicable, use spend instead.
# organic_vars = "newsletter", # marketing activity without media spend
# factor_vars = c("events"), # force variables in context_vars or organic_vars to be categorical
window_start = "2021-02-08",
window_end = "2022-05-16",
adstock = "weibull_pdf" # geometric, weibull_cdf or weibull_pdf.
)
InputCollect <- robyn_inputs(
dt_input = df,
dt_holidays = dt_prophet_holidays,
date_var = "DATE", # date format must be "2020-01-01, and must be in all caps"
dep_var = "revenue", # there should be only one dependent variable
dep_var_type = "conversion", # "revenue" (ROI) or "conversion" (CPA)
prophet_vars = c("trend", "season", "holiday"), # "trend","season", "weekday" & "holiday"
prophet_country = "US", # input one country. dt_prophet_holidays includes 59 countries by default
# context_vars = c("cargill", 'inflation'), # e.g. competitors, discount, unemployment etc
paid_media_spends = c("LCM_Cost", "Paid_Search_Cost", "Dig_Coup_Cost"), # mandatory input
paid_media_vars = c("LCM_Imp", "Paid_Search_Imp", "Dig_Coupon_Imp"), # mandatory.
# paid_media_vars must have same order as paid_media_spends. Use media exposure metrics like
# impressions, GRP etc. If not applicable, use spend instead.
# organic_vars = "newsletter", # marketing activity without media spend
# factor_vars = c("events"), # force variables in context_vars or organic_vars to be categorical
window_start = "2021-02-08",
window_end = "2022-05-16",
adstock = "weibull_pdf" # geometric, weibull_cdf or weibull_pdf.
)
setwd('C:/Users/norri/Desktop/')
Sys.setenv(R_FUTURE_FORK_ENABLE = TRUE) # Force multicore when using RStudio
options(future.fork.enable = TRUE)
df <- read.csv('df_knn_imputed.csv', fileEncoding = 'UTF-8-BOM')
data("dt_prophet_holidays")
head(dt_prophet_holidays)
robyn_object <- "C:/Users/norri/Desktop/My_Robyn.RDS"
InputCollect <- robyn_inputs(
dt_input = df,
dt_holidays = dt_prophet_holidays,
date_var = "DATE", # date format must be "2020-01-01, and must be in all caps"
dep_var = "revenue", # there should be only one dependent variable
dep_var_type = "conversion", # "revenue" (ROI) or "conversion" (CPA)
prophet_vars = c("trend", "season", "holiday"), # "trend","season", "weekday" & "holiday"
prophet_country = "US", # input one country. dt_prophet_holidays includes 59 countries by default
# context_vars = c("cargill", 'inflation'), # e.g. competitors, discount, unemployment etc
paid_media_spends = c("LCM_Cost", "Paid_Search_Cost", "Dig_Coup_Cost"), # mandatory input
paid_media_vars = c("LCM_Imp", "Paid_Search_Imp", "Dig_Coupon_Imp"), # mandatory.
# paid_media_vars must have same order as paid_media_spends. Use media exposure metrics like
# impressions, GRP etc. If not applicable, use spend instead.
# organic_vars = "newsletter", # marketing activity without media spend
# factor_vars = c("events"), # force variables in context_vars or organic_vars to be categorical
window_start = "2021-02-08",
window_end = "2022-05-16",
adstock = "weibull_pdf" # geometric, weibull_cdf or weibull_pdf.
)
``` r
